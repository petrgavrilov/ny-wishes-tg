import { Bot, InlineKeyboard } from "grammy";
import { BotState, isStatePassed, MyContext } from "../types";
import { quizFinishedCommand, startQuizCommand } from "../data/quiz";
import { setupQuizStage1 } from "./quiz-stage-1";
import { setupQuizStage2 } from "./quiz-stage-2";
import { setupQuizStage3 } from "./quiz-stage-3";
import { promptMiniApp } from "./mini-app";

export async function startQuiz(_bot: Bot<MyContext>, ctx: MyContext) {
  ctx.session.state = BotState.PreQuiz;

  const inlineKeyboard = new InlineKeyboard().text(
    `–ü–æ–≥–Ω–∞–ª–∏ ‚û°Ô∏è`,
    startQuizCommand
  );

  await ctx.reply(
    "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —Å–≤–æ–∏—Ö –ø–ª–∞–Ω–∞—Ö –Ω–∞ –±—É–¥—É—â–∏–π –≥–æ–¥",
    {
      reply_markup: inlineKeyboard,
    }
  );
}

export function setupQuiz(bot: Bot<MyContext>) {
  setupQuizStage1(bot);
  setupQuizStage2(bot);
  setupQuizStage3(bot);

  bot.callbackQuery(quizFinishedCommand, async (ctx) => {
    if (isStatePassed(ctx.session, BotState.QuizFinished)) {
      await ctx.answerCallbackQuery({
        text: `üëã`,
      });
      return;
    }

    ctx.session.state = BotState.QuizFinished;

    await ctx.reply(
      "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! –¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, —á—Ç–æ —Ç–µ–±–µ –≤–∞–∂–Ω–æ –≤ –Ω–æ–≤–æ–º –≥–æ–¥—É"
    );

    await promptMiniApp(bot, ctx);
  });
}
